# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.

name: Scorecard supply-chain security
on:
  # For Branch-Protection check. Only the default branch is supported. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection
  branch_protection_rule:
  # To guarantee Maintained check is occasionally updated. See
  # https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained
  schedule:
    - cron: '00 02 * * 5'
  push:
    branches: [ "main" ]

# Declare default permissions as read only.
permissions: read-all

jobs:
  analysis:
    name: Scorecard analysis
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Needed to publish results and get a badge (see publish_results below).
      id-token: write
      # Uncomment the permissions below if installing in a private repository.
      # contents: read
      # actions: read

    steps:
      - name: "Checkout code"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          persist-credentials: false

      - name: "Scorecard Analysis (Attempt 1/3) - Retries on API errors"
        id: scorecard_attempt_1
        uses: ossf/scorecard-action@0864cf19026789058feabb7e87baa5f140aac736 # v2.3.1
        continue-on-error: true
        with:
          results_file: results.sarif
          results_format: sarif
          # (Optional) "write" PAT token. Uncomment the `repo_token` line below if:
          # - you want to enable the Branch-Protection check on a *public* repository, or
          # - you are installing Scorecard on a *private* repository
          # To create the PAT, follow the steps in https://github.com/ossf/scorecard-action?tab=readme-ov-file#authentication-with-fine-grained-pat-optional.
          # repo_token: ${{ secrets.SCORECARD_TOKEN }}

          # Public repositories:
          #   - Publish results to OpenSSF REST API for easy access by consumers
          #   - Allows the repository to include the Scorecard badge.
          #   - See https://github.com/ossf/scorecard-action#publishing-results.
          # For private repositories:
          #   - `publish_results` will always be set to `false`, regardless
          #     of the value entered here.
          publish_results: true

      - name: "Wait before retry"
        if: steps.scorecard_attempt_1.outcome == 'failure'
        run: |
          echo "First attempt failed, waiting 60 seconds before retry..."
          sleep 60

      - name: "Scorecard Analysis (Attempt 2/3) - Retry after API failure"
        id: scorecard_attempt_2
        if: steps.scorecard_attempt_1.outcome == 'failure'
        uses: ossf/scorecard-action@0864cf19026789058feabb7e87baa5f140aac736 # v2.3.1
        continue-on-error: true
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: "Wait before final retry"
        if: steps.scorecard_attempt_1.outcome == 'failure' && steps.scorecard_attempt_2.outcome == 'failure'
        run: |
          echo "Second attempt failed, waiting 120 seconds before final retry..."
          sleep 120

      - name: "Scorecard Analysis (Final Attempt 3/3)"
        id: scorecard_final
        if: steps.scorecard_attempt_1.outcome == 'failure' && steps.scorecard_attempt_2.outcome == 'failure'
        uses: ossf/scorecard-action@0864cf19026789058feabb7e87baa5f140aac736 # v2.3.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: "Report status"
        run: |
          if [ "${{ steps.scorecard_attempt_1.outcome }}" == "success" ]; then
            echo "Scorecard analysis completed successfully on first attempt"
          elif [ "${{ steps.scorecard_attempt_2.outcome }}" == "success" ]; then
            echo "Scorecard analysis completed successfully on second attempt"
          elif [ "${{ steps.scorecard_final.outcome }}" == "success" ]; then
            echo "Scorecard analysis completed successfully on final attempt"
          else
            echo "::error::All Scorecard attempts failed. Please try running the workflow again later."
            exit 1
          fi

      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      #- name: "Upload artifact"
      #  uses: actions/upload-artifact@97a0fba1372883ab732affbe8f94b823f91727db # v3.pre.node20
      #  with:
      #    name: SARIF file
      #    path: results.sarif
      #    retention-days: 5

      # Upload the results to GitHub's code scanning dashboard (optional).
      # Commenting out will disable upload of results to your repo's Code Scanning dashboard
      #- name: "Upload to code-scanning"
      #  uses: github/codeql-action/upload-sarif@v3
      #  with:
      #    sarif_file: results.sarif
